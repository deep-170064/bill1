-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categories
(
    category_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (category_id),
    CONSTRAINT categories_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    loyalty_points integer DEFAULT 0,
    total_spent numeric(10, 2) DEFAULT 0,
    address text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customers_email_key UNIQUE (email),
    CONSTRAINT customers_phone_key UNIQUE (phone)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    employee_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role character varying(50) COLLATE pg_catalog."default" NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    total_sales integer DEFAULT 0,
    total_revenue numeric(10, 2) DEFAULT 0,
    CONSTRAINT employees_pkey PRIMARY KEY (employee_id),
    CONSTRAINT employees_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.notifications
(
    notification_id serial NOT NULL,
    product_id integer,
    message text COLLATE pg_catalog."default" NOT NULL,
    status character varying(10) COLLATE pg_catalog."default" DEFAULT 'unread'::character varying,
    notification_type character varying(20) COLLATE pg_catalog."default" DEFAULT 'low_stock'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    read_at timestamp without time zone,
    CONSTRAINT notifications_pkey PRIMARY KEY (notification_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    barcode character varying(50) COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL DEFAULT 0,
    category_id integer NOT NULL,
    low_stock_threshold integer DEFAULT 10,
    supplier_id integer NOT NULL,
    cost_price numeric(10, 2),
    CONSTRAINT products_pkey PRIMARY KEY (product_id),
    CONSTRAINT products_barcode_key UNIQUE (barcode)
);

CREATE TABLE IF NOT EXISTS public.purchase_order_items
(
    order_item_id serial NOT NULL,
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    CONSTRAINT purchase_order_items_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS public.purchase_orders
(
    order_id serial NOT NULL,
    supplier_id integer NOT NULL,
    order_date date DEFAULT CURRENT_DATE,
    status character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'PENDING'::character varying,
    CONSTRAINT purchase_orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.sale_items
(
    sale_item_id serial NOT NULL,
    sale_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    subtotal numeric(10, 2) GENERATED ALWAYS AS (((quantity)::numeric * unit_price)) STORED,
    CONSTRAINT sale_items_pkey PRIMARY KEY (sale_item_id)
);

CREATE TABLE IF NOT EXISTS public.sales
(
    sale_id serial NOT NULL,
    sale_time timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    total_amount numeric(10, 2) NOT NULL DEFAULT 0,
    payment_method character varying(50) COLLATE pg_catalog."default" NOT NULL,
    customer_id integer,
    employee_id integer,
    CONSTRAINT sales_pkey PRIMARY KEY (sale_id)
);

CREATE TABLE IF NOT EXISTS public.suppliers
(
    supplier_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    reliability_score integer DEFAULT 100,
    last_delivery_date date,
    CONSTRAINT suppliers_pkey PRIMARY KEY (supplier_id),
    CONSTRAINT suppliers_email_key UNIQUE (email),
    CONSTRAINT suppliers_phone_key UNIQUE (phone)
);

ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT notifications_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_supplier_id_fkey FOREIGN KEY (supplier_id)
    REFERENCES public.suppliers (supplier_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.purchase_order_items
    ADD CONSTRAINT purchase_order_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.purchase_orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.purchase_order_items
    ADD CONSTRAINT purchase_order_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.purchase_orders
    ADD CONSTRAINT purchase_orders_supplier_id_fkey FOREIGN KEY (supplier_id)
    REFERENCES public.suppliers (supplier_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale_items
    ADD CONSTRAINT sale_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale_items
    ADD CONSTRAINT sale_items_sale_id_fkey FOREIGN KEY (sale_id)
    REFERENCES public.sales (sale_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT sales_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT sales_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employees (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

END;